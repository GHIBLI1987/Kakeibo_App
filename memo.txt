Spring Boot\u3068JavaScript\u3092\u7d44\u307f\u5408\u308f\u305b\u3066\u3001\u8089\u3084\u9b5a\u306e**100g\u5f53\u305f\u308a\u306e\u4fa1\u683c\u3092\u7b97\u51fa\u3059\u308bWeb\u30a2\u30d7\u30ea**\u3092\u4f5c\u308b\u306e\u306f\u9762\u767d\u3044\u30a2\u30a4\u30c7\u30a2\u3067\u3059\u306d\uff01  
\u57fa\u672c\u7684\u306a\u6d41\u308c\u3068\u3057\u3066\u306f\u3001\u4ee5\u4e0b\u306e\u3088\u3046\u306a\u69cb\u6210\u306b\u306a\u308a\u307e\u3059\u3002

### **1. \u6280\u8853\u9078\u5b9a**
- **\u30d0\u30c3\u30af\u30a8\u30f3\u30c9:** Spring Boot\uff08\u4fa1\u683c\u8a08\u7b97\u306e\u30ed\u30b8\u30c3\u30af\u3001\u30c7\u30fc\u30bf\u7ba1\u7406\uff09
- **\u30d5\u30ed\u30f3\u30c8\u30a8\u30f3\u30c9:** JavaScript\uff08\u30e6\u30fc\u30b6\u30fc\u5165\u529b\u3001\u7d50\u679c\u8868\u793a\uff09
- **\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9:** MySQL\u3084PostgreSQL\uff08\u4fa1\u683c\u30c7\u30fc\u30bf\u306e\u4fdd\u5b58\uff09
- **API:** REST API\uff08\u30d5\u30ed\u30f3\u30c8\u30a8\u30f3\u30c9\u3068\u30d0\u30c3\u30af\u30a8\u30f3\u30c9\u306e\u901a\u4fe1\uff09

### **2. \u5b9f\u88c5\u306e\u6d41\u308c**
#### **\u2460 Spring Boot\u3067\u30d0\u30c3\u30af\u30a8\u30f3\u30c9\u3092\u69cb\u7bc9**
- \u5546\u54c1\uff08\u8089\u30fb\u9b5a\uff09\u306e\u4fa1\u683c\u30c7\u30fc\u30bf\u3092\u7ba1\u7406\u3059\u308b**\u30a8\u30f3\u30c6\u30a3\u30c6\u30a3**\u3092\u4f5c\u6210
- \u4fa1\u683c\u3092\u8a08\u7b97\u3059\u308b**\u30b5\u30fc\u30d3\u30b9**\u3092\u5b9f\u88c5
- \u30d5\u30ed\u30f3\u30c8\u30a8\u30f3\u30c9\u304b\u3089\u306e\u30ea\u30af\u30a8\u30b9\u30c8\u3092\u53d7\u3051\u53d6\u308b**\u30b3\u30f3\u30c8\u30ed\u30fc\u30e9\u30fc**\u3092\u4f5c\u6210

#### **\u2461 JavaScript\u3067\u30d5\u30ed\u30f3\u30c8\u30a8\u30f3\u30c9\u3092\u69cb\u7bc9**
- \u30e6\u30fc\u30b6\u30fc\u304c**\u5546\u54c1\u540d\u3068\u91cd\u91cf\u3092\u5165\u529b**\u3067\u304d\u308b\u30d5\u30a9\u30fc\u30e0\u3092\u4f5c\u6210
- \u5165\u529b\u5024\u3092Spring Boot\u306eAPI\u306b\u9001\u4fe1\u3057\u3001**\u8a08\u7b97\u7d50\u679c\u3092\u53d6\u5f97**
- \u8a08\u7b97\u7d50\u679c\u3092\u753b\u9762\u306b\u8868\u793a

### **3. \u5177\u4f53\u7684\u306a\u30b3\u30fc\u30c9\u4f8b**
#### **Spring Boot\uff08\u30d0\u30c3\u30af\u30a8\u30f3\u30c9\uff09**
```java
@RestController
@RequestMapping("/api")
public class PriceController {
    @GetMapping("/calculate")
    public ResponseEntity<Double> calculatePrice(@RequestParam String item, @RequestParam double weight) {
        double pricePer100g = getPricePer100g(item);
        double totalPrice = (weight / 100) * pricePer100g;
        return ResponseEntity.ok(totalPrice);
    }

    private double getPricePer100g(String item) {
        Map<String, Double> priceMap = Map.of("beef", 500.0, "salmon", 300.0);
        return priceMap.getOrDefault(item, 0.0);
    }
}
```

#### **JavaScript\uff08\u30d5\u30ed\u30f3\u30c8\u30a8\u30f3\u30c9\uff09**
```javascript
async function calculatePrice() {
    const item = document.getElementById("item").value;
    const weight = document.getElementById("weight").value;
    const response = await fetch(`/api/calculate?item=${item}&weight=${weight}`);
    const price = await response.json();
    document.getElementById("result").innerText = `\u5408\u8a08\u4fa1\u683c: ${price}\u5186`;
}
```

### **4. \u8ffd\u52a0\u6a5f\u80fd**
- **\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u9023\u643a:** \u5546\u54c1\u3054\u3068\u306e\u4fa1\u683c\u3092DB\u306b\u4fdd\u5b58\u3057\u3001\u52d5\u7684\u306b\u53d6\u5f97
- **UI\u5f37\u5316:** React\u3084Vue.js\u3092\u4f7f\u3063\u3066\u3001\u3088\u308a\u4f7f\u3044\u3084\u3059\u3044\u30a4\u30f3\u30bf\u30fc\u30d5\u30a7\u30fc\u30b9\u306b
- **\u5c65\u6b74\u7ba1\u7406:** \u8a08\u7b97\u5c65\u6b74\u3092\u4fdd\u5b58\u3057\u3001\u904e\u53bb\u306e\u8a08\u7b97\u7d50\u679c\u3092\u78ba\u8a8d\u3067\u304d\u308b\u6a5f\u80fd

\u3053\u306e\u3088\u3046\u306a\u69cb\u6210\u3067\u958b\u767a\u3092\u9032\u3081\u308b\u3068\u3001\u30b7\u30f3\u30d7\u30eb\u306a\u304c\u3089\u5b9f\u7528\u7684\u306a\u30a2\u30d7\u30ea\u304c\u4f5c\u308c\u307e\u3059\uff01  
\u3069\u3093\u306a\u6a5f\u80fd\u3092\u8ffd\u52a0\u3057\u305f\u3044\u3067\u3059\u304b\uff1f ?