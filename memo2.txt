\u5177\u4f53\u7684\u306a\u5b9f\u88c5\u624b\u9806\u3092\u8aac\u660e\u3057\u307e\u3059\uff01Spring Boot\u3068JavaScript\u3092\u7d44\u307f\u5408\u308f\u305b\u3066\u3001**100g\u5f53\u305f\u308a\u306e\u4fa1\u683c\u3092\u7b97\u51fa\u3059\u308bWeb\u30a2\u30d7\u30ea**\u3092\u4f5c\u308b\u6d41\u308c\u3092\u6574\u7406\u3057\u307e\u3057\u305f\u3002

---

### **1. \u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u306e\u30bb\u30c3\u30c8\u30a2\u30c3\u30d7**
#### **\u2460 Spring Boot\u306e\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u4f5c\u6210**
Spring Initializr\u3092\u4f7f\u3063\u3066\u3001Spring Boot\u306e\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u3092\u4f5c\u6210\u3057\u307e\u3059\u3002
- **\u4f9d\u5b58\u95a2\u4fc2:** Spring Web, Spring Data JPA, MySQL Driver
- **\u30d3\u30eb\u30c9\u30c4\u30fc\u30eb:** Maven \u307e\u305f\u306f Gradle
- **Java\u30d0\u30fc\u30b8\u30e7\u30f3:** 17\u4ee5\u4e0a\u63a8\u5968

```bash
curl https://start.spring.io/starter.zip -d dependencies=web,data-jpa,mysql -d type=maven-project -o demo.zip
```
\u89e3\u51cd\u5f8c\u3001IDE\uff08IntelliJ IDEA\u306a\u3069\uff09\u3067\u958b\u304d\u307e\u3059\u3002

#### **\u2461 MySQL\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u306e\u6e96\u5099**
MySQL\u306b\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u3092\u4f5c\u6210\u3057\u3001\u4fa1\u683c\u30c7\u30fc\u30bf\u3092\u4fdd\u5b58\u3059\u308b\u30c6\u30fc\u30d6\u30eb\u3092\u4f5c\u6210\u3057\u307e\u3059\u3002

```sql
CREATE DATABASE price_db;
USE price_db;

CREATE TABLE items (
    id INT AUTO_INCREMENT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price_per_100g DECIMAL(10,2) NOT NULL
);
```

---

### **2. Spring Boot\u306e\u30d0\u30c3\u30af\u30a8\u30f3\u30c9\u5b9f\u88c5**
#### **\u2460 \u30a8\u30f3\u30c6\u30a3\u30c6\u30a3\u306e\u4f5c\u6210**
```java
@Entity
@Table(name = "items")
public class Item {
    @Id
    @GeneratedValue(strategy = GenerationType.IDENTITY)
    private Long id;
    private String name;
    private double pricePer100g;

    // Getter, Setter
}
```

#### **\u2461 \u30ea\u30dd\u30b8\u30c8\u30ea\u306e\u4f5c\u6210**
```java
@Repository
public interface ItemRepository extends JpaRepository<Item, Long> {
    Optional<Item> findByName(String name);
}
```

#### **\u2462 \u30b5\u30fc\u30d3\u30b9\u306e\u4f5c\u6210**
```java
@Service
public class ItemService {
    @Autowired
    private ItemRepository itemRepository;

    public double calculatePrice(String name, double weight) {
        Item item = itemRepository.findByName(name).orElseThrow(() -> new RuntimeException("\u5546\u54c1\u304c\u898b\u3064\u304b\u308a\u307e\u305b\u3093"));
        return (weight / 100) * item.getPricePer100g();
    }
}
```

#### **\u2463 \u30b3\u30f3\u30c8\u30ed\u30fc\u30e9\u30fc\u306e\u4f5c\u6210**
```java
@RestController
@RequestMapping("/api")
public class ItemController {
    @Autowired
    private ItemService itemService;

    @GetMapping("/calculate")
    public ResponseEntity<Double> calculatePrice(@RequestParam String name, @RequestParam double weight) {
        double price = itemService.calculatePrice(name, weight);
        return ResponseEntity.ok(price);
    }
}
```

---

### **3. \u30d5\u30ed\u30f3\u30c8\u30a8\u30f3\u30c9\u306e\u5b9f\u88c5\uff08JavaScript\uff09**
#### **\u2460 HTML\u306e\u4f5c\u6210**
```html
<!DOCTYPE html>
<html lang="ja">
<head>
    <meta charset="UTF-8">
    <title>\u4fa1\u683c\u8a08\u7b97\u30a2\u30d7\u30ea</title>
</head>
<body>
    <h1>100g\u5f53\u305f\u308a\u306e\u4fa1\u683c\u8a08\u7b97</h1>
    <input type="text" id="item" placeholder="\u5546\u54c1\u540d">
    <input type="number" id="weight" placeholder="\u91cd\u91cf(g)">
    <button onclick="calculatePrice()">\u8a08\u7b97</button>
    <p id="result"></p>

    <script src="script.js"></script>
</body>
</html>
```

#### **\u2461 JavaScript\u306e\u4f5c\u6210**
```javascript
async function calculatePrice() {
    const item = document.getElementById("item").value;
    const weight = document.getElementById("weight").value;
    const response = await fetch(`/api/calculate?name=${item}&weight=${weight}`);
    const price = await response.json();
    document.getElementById("result").innerText = `\u5408\u8a08\u4fa1\u683c: ${price}\u5186`;
}
```

---

### **4. \u30a2\u30d7\u30ea\u306e\u8d77\u52d5**
#### **\u2460 Spring Boot\u306e\u8d77\u52d5**
```bash
mvn spring-boot:run
```

#### **\u2461 \u30d5\u30ed\u30f3\u30c8\u30a8\u30f3\u30c9\u306e\u8868\u793a**
\u30d6\u30e9\u30a6\u30b6\u3067`index.html`\u3092\u958b\u304d\u3001\u5546\u54c1\u540d\u3068\u91cd\u91cf\u3092\u5165\u529b\u3057\u3066\u8a08\u7b97\u30dc\u30bf\u30f3\u3092\u62bc\u3059\u3068\u3001\u4fa1\u683c\u304c\u8868\u793a\u3055\u308c\u307e\u3059\u3002

---

\u3053\u306e\u6d41\u308c\u3067\u5b9f\u88c5\u3059\u308c\u3070\u3001\u30b7\u30f3\u30d7\u30eb\u306a\u4fa1\u683c\u8a08\u7b97\u30a2\u30d7\u30ea\u304c\u5b8c\u6210\u3057\u307e\u3059\uff01  
\u8ffd\u52a0\u6a5f\u80fd\u3068\u3057\u3066\u3001**\u5546\u54c1\u767b\u9332\u6a5f\u80fd**\u3084**\u5c65\u6b74\u7ba1\u7406**\u3092\u5b9f\u88c5\u3059\u308b\u306e\u3082\u9762\u767d\u3044\u3067\u3059\u306d\u3002  
\u3069\u3093\u306a\u6a5f\u80fd\u3092\u8ffd\u52a0\u3057\u305f\u3044\u3067\u3059\u304b\uff1f ?